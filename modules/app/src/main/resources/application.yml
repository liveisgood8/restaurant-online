server:
  port: 10100
auth:
  tokenInfo:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMs: 864000000
  oauth2Info:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - http://192.168.0.17:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
api:
  basePath: /api/v1
spring:
  resources:
    static-locations:
      - file:${project.basedir}/../../ui/build/
  application:
    name: ro-app
  liquibase:
    change-log: classpath:/liquibase/changelog/master.yml
  datasource:
    url: jdbc:mysql://localhost:3306/ro?allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    username: root
    password: root
    validationQuery: SELECT 1
  jpa:
    hibernate:
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
    show-sql: false
  servlet:
    multipart:
      max-file-size: 2MB
      max-request-size: 5MB
      enabled: true
      location: ${java.io.tmpdir}
  jackson:
    serialization:
      write_dates_as_timestamps: true
  security:
    oauth2:
      client:
        registration:
          google:
            registrationId: "GOOGLE"
            clientId: "${OAUTH2_GOOGLE_CLIENT_ID}"
            clientSecret: "${OAUTH2_GOOGLE_CLIENT_SECRET}"
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            registrationId: "FACEBOOK"
            clientId: "${OAUTH2_FACEBOOK_CLIENT_ID}"
            clientSecret: "${OAUTH2_FACEBOOK_CLIENT_SECRET}"
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
          vk:
            registrationId: "VK"
            clientId: "${OAUTH2_VK_CLIENT_ID}"
            clientSecret: "${OAUTH2_VK_CLIENT_SECRET}"
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            authorizationGrantType: "authorization_code"
            redirectUriTemplate: "{baseUrl}/login/oauth2/code/xxxxxxxxx"
            clientName: "vk"
            provider: "vk"
            clientAuthenticationMethod: "post"
            scope:
              - email
        provider:
          vk:
            authorizationUri: "https://oauth.vk.com/authorize"
            tokenUri: "https://oauth.vk.com/access_token"
            userInfoUri: "https://api.vk.com/method/users.get?access_token={access_token}&v=5.124"
            userNameAttribute: "email"
          facebook:
            authorizationUri: "https://www.facebook.com/v3.0/dialog/oauth"
            tokenUri: "https://graph.facebook.com/v3.0/oauth/access_token"
            userInfoUri: "https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)"